public class Main {

    /*
    План занят
    1) Красное-черные деревья
     */

    /*
    Теория
    Глава 9 - стр. 403
    Вырождение - это потеря какой-то функции при наличии тех же свойств, что и у других представителей этой сущности
    Пример вырождения двоичного дерева 0 стр. 405, рис. 9.2

    Чтобы спровоцировать вырождение у двоичного дерева нужно записать в него отсортированные данные.

    Вообще отсортированные или частично отсортированные данные служат серьезной проблемой для многих "быстрых" алгоритмов ,
    в качетсве механизма борьбы с этой проблемой предлагается рандомизация - прием для "смешивания" данных в структруе, т.е.
    для каждого элемента в этой структуре записывается рандомный индекс. Алгоритм рандомизации нет смысла применять более
    одного количества раз для получения более рандомной структуры - это не поможет.

    Структуры данных VS алгоритмы
    Структура хранит данные и подразумевает определенный алгоритм их обработки

    Алгоритмы обрабатывают что-либо

    Вывод: Структуры данных не живут без алгоритмов, а алгоритмы могут обойтись без структур данных, например:
    Вывести 10 раз слово "Привет", считать ввод пользователя и сказать ему "Пока" - это алгоритм

    Красно-черные деревья:
    1) Каждый узел окрашен в определенный цвет - красный или черный
    2) Для этих узлов есть определенный правила по расположению:
    2.1) Корень всегда черный
    2.2) Если узел красный, его потомки должны быть черными(обратное не всегда выполняется)
    2.3) Все пути от корня к узлу или пустому потомку должны содержать одинаковое количество черных узлов("квоты на черных
    в пути")

    Балансировка часто называется вращением узлов




     */

    /*
    Заметки
    Листинги к 9 главе отсутствуют - поэтому рассмотрим статью: https://www.happycoders.eu/algorithms/red-black-tree-java/
    Рекомендация, если не знаете английский язык, пробуйте переводить стптьи такого рода со словарем - хорошй способ выучить
    профессиональный английский

    В информатике принято использовать допущения, т.е. если говорится, что можно получить доступ за константное время, это
    не всегда значит, что количество операций будет одинаковым - оно будет приблизительно одинаковым вне зависимости от
    размера структуры

     */
    public static void main(String[] args) {

    }

    /*
    ДЗ
    1) Попробовать сделать свое двоичное дерево в классе BRTree и столкнуться с проблемой вырождения - несбалансированным
    деревом(Пример у меня в репозитории - 10 урок, и в книге(Структуры данных и алгоритмы Java. Роберт Лафоре)
    8 глава стр. 346 страница
    PS
    Подумать о механизмах борьбы с вырождением бинарного дерева.
    2) Ознакомиться со списком литературы в чате и начать что-то делать по своим интересам.

     */
}
